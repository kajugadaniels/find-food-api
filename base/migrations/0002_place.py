# Generated by Django 5.0 on 2025-01-07 15:50

import base.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('address', models.CharField(max_length=500, verbose_name='Address')),
                ('latitude', models.FloatField(validators=[django.core.validators.RegexValidator(message='Enter a valid latitude (-90 to 90).', regex='^-?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$')], verbose_name='Latitude')),
                ('longitude', models.FloatField(validators=[django.core.validators.RegexValidator(message='Enter a valid longitude (-180 to 180).', regex='^-?((1[0-7]\\d)|(\\d{1,2}))(\\.\\d+)?$')], verbose_name='Longitude')),
                ('main_phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number (up to 15 digits).', regex='^\\+?1?\\d{9,15}$')], verbose_name='Main Phone Number')),
                ('second_phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number (up to 15 digits).', regex='^\\+?1?\\d{9,15}$')], verbose_name='Second Phone Number')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='Email')),
                ('instagram', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()], verbose_name='Instagram URL')),
                ('whatsapp', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()], verbose_name='WhatsApp URL')),
                ('tiktok', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()], verbose_name='TikTok URL')),
                ('facebook', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()], verbose_name='Facebook URL')),
                ('twitter', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()], verbose_name='Twitter URL')),
                ('profile_image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to=base.models.user_image_path, verbose_name='Profile Image')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='places', to='base.category', verbose_name='Category')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='place', to=settings.AUTH_USER_MODEL, verbose_name='Associated User')),
            ],
            options={
                'verbose_name': 'Place',
                'verbose_name_plural': 'Places',
                'ordering': ['created_at'],
            },
        ),
    ]
